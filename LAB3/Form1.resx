<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bqFb6FLoFrqFbqFb6Ba6hW6hW+gWuoUuhW6hW+hS6Ba6FLqFbqFb6Ba6hW6hS6Fb6Ba6FLqFLoVuoVvo
        FrqFLoVuoVvoUugWuhS6hW6hW+gWuhS6hW6hW+gWuoVuoVvoFrqFbqFLoVvoFrqFbqFb6Ba6hW6hW+gW
        uhS6hW6hS6Fb6FLoFrqFbqFb6Ba6hS6FbqFb6FLoFroUuoVuoVvoFroUuoVuoUuhW+hS6Ba6hW6hW+hS
        6Ba6hW6hW+gWuoVuoVvoFrqFLoVuoVvoFrqFbqFb6Ba6hW6hW+hS6Ba6hS6FbqFLoVvoFrqFbqFb6Ba6
        FLqFbqFLoVvoUugWuoVuoVvoUugWuoUuhW6hS6Fb6Ba6hW6hS6Fb6Ba6hW6hW+gWuoVuoVvoFroUuoVu
        oVvoFrqFbqFb6Ba6hW6hS6Fb6Ba6FLqFLoVuoVvoFrqFbqFb6FLoFrqFLoVuoUuhW+gWuoVuoUuhW+gW
        uhS6hS6FbqFb6Ba6hS6FbqFb6Ba6hW6hW+gWuoVuoVvoUugWuoVuoVvoFrqFbqFb6Ba6hS6FbqFb6FLo
        FroUuoVuoVvoFrqFbqFLoVvoFroUuoUuhW6hW+gWuoUuhW6hW+hS6Ba6FLqFbqFb6Ba6FLqFbqFb6Ba6
        hW6hW+gWuoVuoUuhW+gWuoVuoVvoFrqFbqFb6Ba6FLqFbqFLoVvoUugWuoVuoVvoFrqFLoVuoVvoUugW
        uhS6hW6hW+gWuhS6hW6hS6Fb6FLoFrqFbqFb6FLoFrqFbqFb6Ba6hW6hW+gWuoUuhW6hW+gWuoVuoVvo
        FrqFbqFb6FLoFrqFLoVuoUuhW+gWuoVuoVvoFroUuoVuoUuhW+hS6Ba6hW6hW+hS6Ba6hS6FbqFLoVvo
        FrqFbqFLoVvoFrqFbqFb6Ba6hW6hW+gWuhS6hW6hW+gWuoVuoVvoFrqFbqFLoVvoFroUuoUuhW6hW+j+
        v0N37JH/At1T66+xCqRPAAAAAElFTkSuQmCC
</value>
  </data>
</root>